<script>

    async function imposeMinMax(e){
        if(e.value != ""){
          if(parseInt(e.value) < parseInt(e.min)){
            e.value = e.min;
          }
          if(parseInt(e.value) > parseInt(e.max)){
            e.value = e.max;
          }
        }
      }
      
     
    {% comment %} get varinat inventroy count  {% endcomment %}
    const allavaiableinventory = [
    {% for variant in product.variants %}
    
     {{ variant.inventory_quantity }},
           
     {% endfor %}
    
    
    ]
    
    
    
    //console.log(allavaiableinventory)
    
    
    {% comment %} Get seperated color data end {% endcomment %}
    
    const getallColorfromproudct =[
      {% for value in product.options_by_name.color.values %}
       {% if forloop.index == last %} "{{ value | split: " " | join:"" }} " {% else %} "{{ value | split: " " | join:""}}", {% endif %}
     {% endfor %}];
      // console.log( getallColorfromproudct);
    async function getUsers() {
      let url = `{{ product.url }}.json`;
      try {
          let res = await fetch(url);
          return await res.json();
      } catch (error) {
          console.log(error);
      }
    }
    
    
    {% comment %} Get seperated color data  {% endcomment %}
    {% for value in product.options_by_name.color.values %}
      const  {{ value | split: " " | join:"" }} = [];
      {% endfor %}
    
    async function renderUsers() {
      let users = await getUsers();
       console.log(users)
    
    // geting the color to check if it contain  that color or size for optio one or option two in jeson data
    let html = '';
    
    if ( users.product.options[1].name === 'Color'){
    
    
    
    
    
      if(users.product.options[0].name === 'Size'){
    
    
         // console.log(users.product.options[0].name + " From 0 option ");
        users.product.options[1].values.forEach(value =>{
          {% comment %} console.log(value); {% endcomment %}
          {% comment %} console.log(users.product.variants); {% endcomment %}
          users.product.variants.forEach((user , index) => {
         // console.log(user) 
         {% comment %} console.log(value) {% endcomment %}
            if( value === user.option2 ){
              
              let htmlSegment = `<div class="user">
                               
                <p>$ ${user.price}</p>
                <div>
                  <input type="number" data-varnitid="${user.id}" onchange="myFunction(this)" placeholder="${user.option1}">  
                </div>
                <p>${allavaiableinventory[index]} </p>
            </div>`;
            // console.log("this is running Varinat");
            html += htmlSegment;
            } // end of if loop
           
        }); // forEach end
    
    
        }); ///for Each end 
        // settings update here 
    
    
     
    
    
        } // last of Inner if for sizing users.product.options[0].name === 'Size'
        else if(users.product.options[2].name === 'Size' ) {
    
    
    
      
    
    
    
        }// last of Inner if for sizing users.product.options[2].name === 'Size'
    
      } //last of Main if function this is only work if users.product.options[1].name === 'Color'
      
      {% comment %} let container = document.querySelector('.allinonarray');
      container.innerHTML = html; {% endcomment %}
    
    
      users.product.variants.forEach((user,index) => {
        user.inventory_product_count = allavaiableinventory[index];
         
      console.log(user.enventorycount);
        getallColorfromproudct.map(singelcolor =>{
         
          
      let option1s = user.option1;
       let option1 = option1s.split('').filter(e => e.trim().length).join('');
      let option2s = user.option2;
       let option2 = option2s.split('').filter(e => e.trim().length).join('');
     //let option3s = user.option3;
     //  let option3 = option3s.split('').filter(e => e.trim().length).join('_');
    
            if(option1 == singelcolor || option2 == singelcolor   ){
               eval(singelcolor).push(user); 
              
            } else{
             
            }
          
    
        });
      });
      
      {% for value in product.options_by_name.color.values %}
        {{ value | split: " " | join:"" }}.unshift( '{{ value | split: "___" | first  }}'  );
        {% endfor %} 
    
        
    
       // color and sizing name array 
    
       const colorandSizing = [
          "Color",
    
        {% for value in product.options_by_name.size.values %}
        {% if forloop.index == last %} "{{ value }} " {% else %} "{{ value}}", {% endif %}
        {% endfor %}
       ];
      // console.log(colorandSizing);
    
      //now seperate array start
    let htmla =''
    colorandSizing.forEach((data,index,arr)=>{
    
      if(index === 0){
      
        let htmlSegment2 = `
      <div class="row wholesaleoption-title">
        <div class="col-3">
        <div class="allvarinatname-title">
                                <p>
          ${data} </p>
        </div>
      </div>
        `;
        htmla += htmlSegment2;
          }
          else if (index === 1 ) {
            let htmlSegment3 = `
        <div class="col-8 d-flex justify-content-around">
                <div class="allvarinatname-content">
                                        <p>
                  ${data} </p>
                </div>
               
          
                `;
                htmla += htmlSegment3;
      
              
            }
          
          
       else if (index === arr.length - 1 ) {
            let htmlSegment3 = `
      
                <div class="allvarinatname-content">
                                        <p>
                  ${data} </p>
                </div>
              </div>
                <div class="col-1">
                  
                </div>
              </div> 
                `;
                htmla += htmlSegment3;
      
              
            } 
          
          else{
    
      let htmlSegment4 = `
     
        <div class="allvarinatname-content">
                                <p>
          ${data} </p>
        </div>`;
        htmla += htmlSegment4;
    }
    
    
    
      
      }) // coloradnsizing end
    
    
    {% for value in product.options_by_name.color.values %}
      {{ value | split: " " | join:"" }}.forEach((data,index,arr)=>{
    
        
       if(index === 0){
        console.log(data);
     htmlSegment = `
        <div class="row topwrapper d-flex align-items-center">
        <div class="allvarinatcolorname  col-3">
    
          <p> Cost Per Unit: </p>
    
            <div class="d-flex align-items-center colorname">
              <div style="background: #{{ value | split: "___" | last  }};
                width: 45px;
                height: 45px;
                border:1px solid #fffff7;
                border-radius: 50%;">
              </div>
            <p>${data} </p>
            </div >
    
          <p> Stock Level: </p>
         
        </div>`;
        htmla += htmlSegment;
      } 
      else if( index === 1 ){
        htmlSegment = `<div class="col-8 d-flex justify-content-around">    
        <div class="singel-varniat-input">        
              <p>$${data.price}</p>
              <div>
                <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
              </div>
              <p>${data.inventory_product_count   } </p>
            </div>`;
        htmla += htmlSegment; 
      }
      
      
      
      
      else if( index === arr.length-1 ){
        htmlSegment = `<div class="singel-varniat-input">         
        <p>$${data.price.replace(/\s+/g,'')}</p>
        <div>
          <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
        </div>
        <p>${data.inventory_product_count} </p>
      </div>
    
       </div> <!--end of element bootstrap inner div-->
      
    
    
       <div class="col-1">
        <div class="color-add-color" onclick="addItem()">
          Add
        </div>
      </div>
    
    </div>
      
      `;
        htmla += htmlSegment; 
      }
      
      else{
        htmlSegment = `<div class="singel-varniat-input">         
              <p>$${data.price.replace(/\s+/g,'')}</p>
              <div>
                <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
              </div>
              <p>${data.inventory_product_count} </p>
            </div>`;
        htmla += htmlSegment; 
      }
        // console.log("this is running Varinat");
        
      });
      {% endfor %} 
    
    
    
    let container2 = document.querySelector('.alltitle');
    container2.innerHTML = htmla;
    
    
    
    } //last of main function
    
    
    
    renderUsers();
    let itemraw = [];
    async function myFunction(e){
      let newobect = {};
     newobect['id'] = e.getAttribute('data-varnitid');
     newobect['quantity'] = e.value;
     itemraw.push(newobect);
     console.log(itemraw);
    } 
    
    
    async function addItem() {
      const parser = new DOMParser();
     async function addItem1(itemraw) {
    
      let result = await fetch("/cart/add.js", {
          method: "POST",
          headers: {
              "Content-Type": "application/json",
              "Accept": "application/json",
              'X-Requested-With':  'XMLHttpRequest'
              
          },
          body: JSON.stringify(
            {
              items:itemraw,
              sections: "cart-drawer,cart-icon-bubble"
            }
        )
      })
      .then((response) => response.json() )
      .then((response) => {
    
        console.log(response);
        
        console.log(itemraw);
                
       
                  let section  = response.sections['cart-drawer'];
                const newdata =   parser.parseFromString(section, 'text/html');
                const wanted =   newdata.querySelector('#CartDrawer'); 
    
                $(function () {
                  $('input').val(''); 
    
    
                  $("body").addClass("overflow-hidden"); 
                  $("cart-drawer").removeClass("is-empty");
                  $("cart-drawer").addClass("drawer animate active"); 
                    html = $($.parseXML(wanted));
                    
                    {% comment %} $("head").append(wanted.find("script")); {% endcomment %}
                    $("#CartDrawer").replaceWith(wanted);
                });
                $('input').each(  function( e ) {
                    console.log(e.value);
                });
    
          });
         
    
      
    
    }
    setTimeout(
      
      function(){
       
        console.log(itemraw);
     
      
     },2000);
    const  cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
    
    const additemcount = addItem1(itemraw);
    
    // ;
    
    
    
    }///async addItem end
    
    
 

































     function testing(){
    
    async function imposeMinMax(e){
       if(e.value != ""){
         if(parseInt(e.value) < parseInt(e.min)){
           e.value = e.min;
         }
         if(parseInt(e.value) > parseInt(e.max)){
           e.value = e.max;
         }
       }
     }
     
    
   {% comment %} get varinat inventroy count  {% endcomment %}
   const allavaiableinventory = [
   {% for variant in product.variants %}
   
    {{ variant.inventory_quantity }},
          
    {% endfor %}
   
   
   ]
   
   
   
   //console.log(allavaiableinventory)
   
   
   {% comment %} Get seperated color data end {% endcomment %}
   
   const getallColorfromproudct =[
     {% for value in product.options_by_name.color.values %}
      {% if forloop.index == last %} "{{ value | split: " " | join:"" }} " {% else %} "{{ value | split: " " | join:""}}", {% endif %}
    {% endfor %}];
     // console.log( getallColorfromproudct);
   async function getUsers() {
     let url = `{{ product.url }}.json`;
     try {
         let res = await fetch(url);
         return await res.json();
     } catch (error) {
         console.log(error);
     }
   }
   
   
   {% comment %} Get seperated color data  {% endcomment %}
   {% for value in product.options_by_name.color.values %}
     const  {{ value | split: " " | join:"" }} = [];
     {% endfor %}
   
   async function renderUsers() {
     let users = await getUsers();
      console.log(users)
   
   // geting the color to check if it contain  that color or size for optio one or option two in jeson data
   let html = '';
   
   if ( users.product.options[1].name === 'Color'){
   
   
   
   
   
     if(users.product.options[0].name === 'Size'){
   
   
        // console.log(users.product.options[0].name + " From 0 option ");
       users.product.options[1].values.forEach(value =>{
         {% comment %} console.log(value); {% endcomment %}
         {% comment %} console.log(users.product.variants); {% endcomment %}
         users.product.variants.forEach((user , index) => {
        // console.log(user) 
        {% comment %} console.log(value) {% endcomment %}
           if( value === user.option2 ){
             
             let htmlSegment = `<div class="user">
                              
               <p>$ ${user.price}</p>
               <div>
                 <input type="number" data-varnitid="${user.id}" onchange="myFunction(this)" placeholder="${user.option1}">  
               </div>
               <p>${allavaiableinventory[index]} </p>
           </div>`;
           // console.log("this is running Varinat");
           html += htmlSegment;
           } // end of if loop
          
       }); // forEach end
   
   
       }); ///for Each end 
       // settings update here 
   
   
    
   
   
       } // last of Inner if for sizing users.product.options[0].name === 'Size'
       else if(users.product.options[2].name === 'Size' ) {
   
   
   
     
   
   
   
       }// last of Inner if for sizing users.product.options[2].name === 'Size'
   
     } //last of Main if function this is only work if users.product.options[1].name === 'Color'
     
     {% comment %} let container = document.querySelector('.allinonarray');
     container.innerHTML = html; {% endcomment %}
   
   
     users.product.variants.forEach((user,index) => {
       user.inventory_product_count = allavaiableinventory[index];
        
     console.log(user.enventorycount);
       getallColorfromproudct.map(singelcolor =>{
        
         
     let option1s = user.option1;
      let option1 = option1s.split('').filter(e => e.trim().length).join('');
     let option2s = user.option2;
      let option2 = option2s.split('').filter(e => e.trim().length).join('');
    //let option3s = user.option3;
    //  let option3 = option3s.split('').filter(e => e.trim().length).join('_');
   
           if(option1 == singelcolor || option2 == singelcolor   ){
              eval(singelcolor).push(user); 
             
           } else{
            
           }
         
   
       });
     });
     
     {% for value in product.options_by_name.color.values %}
       {{ value | split: " " | join:"" }}.unshift( '{{ value | split: "___" | first  }}'  );
       {% endfor %} 
   
       
   
      // color and sizing name array 
   
      const colorandSizing = [
         "Color",
   
       {% for value in product.options_by_name.size.values %}
       {% if forloop.index == last %} "{{ value }} " {% else %} "{{ value}}", {% endif %}
       {% endfor %}
      ];
     // console.log(colorandSizing);
   
     //now seperate array start
   let htmla =''
   colorandSizing.forEach((data,index,arr)=>{
   
     if(index === 0){
     
       let htmlSegment2 = `
     <div class="row wholesaleoption-title">
       <div class="col-3">
       <div class="allvarinatname-title">
                               <p>
         ${data} </p>
       </div>
     </div>
       `;
       htmla += htmlSegment2;
         }
         else if (index === 1 ) {
           let htmlSegment3 = `
       <div class="col-8 d-flex justify-content-around">
               <div class="allvarinatname-content">
                                       <p>
                 ${data} </p>
               </div>
              
         
               `;
               htmla += htmlSegment3;
     
             
           }
         
         
      else if (index === arr.length - 1 ) {
           let htmlSegment3 = `
     
               <div class="allvarinatname-content">
                                       <p>
                 ${data} </p>
               </div>
             </div>
               <div class="col-1">
                 
               </div>
             </div> 
               `;
               htmla += htmlSegment3;
     
             
           } 
         
         else{
   
     let htmlSegment4 = `
    
       <div class="allvarinatname-content">
                               <p>
         ${data} </p>
       </div>`;
       htmla += htmlSegment4;
   }
   
   
   
     
     }) // coloradnsizing end
   
   
   {% for value in product.options_by_name.color.values %}
     {{ value | split: " " | join:"" }}.forEach((data,index,arr)=>{
   
       
      if(index === 0){
       console.log(data);
    htmlSegment = `
       <div class="row topwrapper d-flex align-items-center">
       <div class="allvarinatcolorname  col-3">
   
         <p> Cost Per Unit: </p>
   
           <div class="d-flex align-items-center colorname">
             <div style="background: #{{ value | split: "___" | last  }};
               width: 45px;
               height: 45px;
               border:1px solid #fffff7;
               border-radius: 50%;">
             </div>
           <p>${data} </p>
           </div >
   
         <p> Stock Level: </p>
        
       </div>`;
       htmla += htmlSegment;
     } 
     else if( index === 1 ){
       htmlSegment = `<div class="col-8 d-flex justify-content-around">    
       <div class="singel-varniat-input">        
             <p>$${data.price}</p>
             <div>
               <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
             </div>
             <p>${data.inventory_product_count   } </p>
           </div>`;
       htmla += htmlSegment; 
     }
     
     
     
     
     else if( index === arr.length-1 ){
       htmlSegment = `<div class="singel-varniat-input">         
       <p>$${data.price.replace(/\s+/g,'')}</p>
       <div>
         <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
       </div>
       <p>${data.inventory_product_count} </p>
     </div>
   
      </div> <!--end of element bootstrap inner div-->
     
   
   
      <div class="col-1">
       <div class="color-add-color" onclick="addItem()">
         Add
       </div>
     </div>
   
   </div>
     
     `;
       htmla += htmlSegment; 
     }
     
     else{
       htmlSegment = `<div class="singel-varniat-input">         
             <p>$${data.price.replace(/\s+/g,'')}</p>
             <div>
               <input type="number" min="0" max="${data.inventory_product_count}" data-varnitid="${data.id}" onchange="myFunction(this)" placeholder="${data.option1}" onkeyup="imposeMinMax(this)">  
             </div>
             <p>${data.inventory_product_count} </p>
           </div>`;
       htmla += htmlSegment; 
     }
       // console.log("this is running Varinat");
       
     });
     {% endfor %} 
   
   
   
   let container2 = document.querySelector('.alltitle');
   container2.innerHTML = htmla;
   
   
   
   } //last of main function
   
   
   
   renderUsers();
   let itemraw = [];
   async function myFunction(e){
     let newobect = {};
    newobect['id'] = e.getAttribute('data-varnitid');
    newobect['quantity'] = e.value;
    itemraw.push(newobect);
    console.log(itemraw);
   } 
   
   
   async function addItem() {
     const parser = new DOMParser();
    async function addItem1(itemraw) {
   
     let result = await fetch("/cart/add.js", {
         method: "POST",
         headers: {
             "Content-Type": "application/json",
             "Accept": "application/json",
             'X-Requested-With':  'XMLHttpRequest'
             
         },
         body: JSON.stringify(
           {
             items:itemraw,
             sections: "cart-drawer,cart-icon-bubble"
           }
       )
     })
     .then((response) => response.json() )
     .then((response) => {
   
       console.log(response);
       
       console.log(itemraw);
               
      
                 let section  = response.sections['cart-drawer'];
               const newdata =   parser.parseFromString(section, 'text/html');
               const wanted =   newdata.querySelector('#CartDrawer'); 
   
               $(function () {
                 $('input').val(''); 
   
   
                 $("body").addClass("overflow-hidden"); 
                 $("cart-drawer").removeClass("is-empty");
                 $("cart-drawer").addClass("drawer animate active"); 
                   html = $($.parseXML(wanted));
                   
                   {% comment %} $("head").append(wanted.find("script")); {% endcomment %}
                   $("#CartDrawer").replaceWith(wanted);
               });
               $('input').each(  function( e ) {
                   console.log(e.value);
               });
   
         });
        
   
     
   
   }
   setTimeout(
     
     function(){
      
       console.log(itemraw);
    
     
    },2000);
   const  cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
   
   const additemcount = addItem1(itemraw);
   
   // ;
   
   
   
   }///async addItem end
   
   

   
}
   
testing();
$('.drawer__close').click(function() {
    testing();
});
   </script>